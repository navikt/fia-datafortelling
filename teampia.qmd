---
title: "En datafortelling om de nye løsningene i Fia."
subtitle: Behovsvurdering, plan og evaluering.
title-block-banner: true
title-block-banner-color: white
date: now
date-format: "DD.MM.YYYY HH:mm:ss z"
published-title: "Oppdatert"
author: Team Pia
author-title: "Eier"
execute:
    echo: false
    warning: false
    daemon: false
format:
    dashboard:
        embed-resources: true
        scrolling: true
jupyter: python3
---

## Row

::: {.callout-note}
Ansvarlig team er [Team Pia](https://teamkatalog.nav.no/team/b347ac99-c382-4e5a-a1dd-532e91110e2a).
Kontakt oss på [slack](https://nav-it.slack.com/archives/C02DL347ZT2) eller på e-post `pia@nav.no`.

Kildekoden finnes på [GitHub](https://github.com/navikt/fia-datafortelling).

<span style="color:red;">
NB! Dette er ikke offisiell statistikk og må ikke deles utenfor NAV.
</span>
:::

```{python}
import pandas as pd
import plotly.graph_objects as go
from google.cloud.bigquery import Client

project = "pia-prod-85b2"
bq_client = Client(project)
```

```{python}
query = """
    select distinct bv.id, opprettet, paabegynt, avsluttet, slettet
    from (select distinct id, opprettet
            from `pia_bigquery_sink_v1_dataset_prod.behovsvurdering-bigquery-v1`) as bv
        left join
            (select id, endret as paabegynt
                from `pia_bigquery_sink_v1_dataset_prod.behovsvurdering-bigquery-v1`
                where status="PÅBEGYNT") as bv_paabegynt
        on bv_paabegynt.id = bv.id
        left join
            (select id, endret as avsluttet
                from `pia_bigquery_sink_v1_dataset_prod.behovsvurdering-bigquery-v1`
                where status="AVSLUTTET") as bv_avsluttet
            on bv_avsluttet.id = bv.id
        left join
            (select id, min(endret) as slettet
                from `pia_bigquery_sink_v1_dataset_prod.behovsvurdering-bigquery-v1`
                where status="SLETTET"
                group by id) as bv_slettet
            on bv_slettet.id = bv.id
"""
df_bv = bq_client.query(query=query).to_dataframe()
```

## Row
```{python}
#| component: valuebox
#| title: Antall opprettet samarbeider
query = "select count(distinct id) from `pia_bigquery_sink_v1_dataset_prod.samarbeid-bigquery-v1`"
antall_samarbeid = next(bq_client.query(query=query).result())[0]
dict(
    color = "light",
    value = antall_samarbeid
)
```

```{python}
#| component: valuebox
#| title: Antall opprettet behovsvurderinger
dict(
    color = "light",
    value = int(df_bv.shape[0])
)
```

```{python}
#| component: valuebox
#| title: Antall fullførte behovsvurderinger
dict(
    color = "light",
    value = int((~df_bv.avsluttet.isna()).sum())
)
```

## Row
```{python}
#| title: Antall opprettet behovsvurderinger per måned
query = """
    select format_datetime('%Y-%m', opprettet) as maaned, count(distinct id)
    from `pia_bigquery_sink_v1_dataset_prod.behovsvurdering-bigquery-v1`
    group by maaned
    order by maaned
"""
opprettet_behovsv_permaaned = bq_client.query(query=query).to_dataframe()

fig = go.Figure()
fig = fig.add_trace(
    go.Bar(
        x=opprettet_behovsv_permaaned.maaned,
        y=opprettet_behovsv_permaaned.f0_,
    )
)
fig = fig.update_layout(
    xaxis_title="Opprettet måned",
    yaxis_title="Antall behovsvurderinger",
)
fig.show()
```

```{python}
#| title: Antall fullførte behovsvurderinger per måned
query = """
    select format_datetime('%Y-%m', endret) as maaned, count(distinct id)
    from `pia_bigquery_sink_v1_dataset_prod.behovsvurdering-bigquery-v1`
    where status="AVSLUTTET"
    group by maaned
    order by maaned
"""
opprettet_behovsv_permaaned = bq_client.query(query=query).to_dataframe()

fig = go.Figure()
fig = fig.add_trace(
    go.Bar(
        x=opprettet_behovsv_permaaned.maaned,
        y=opprettet_behovsv_permaaned.f0_,
    )
)
fig = fig.update_layout(
    xaxis_title="Fullført måned",
    yaxis_title="Antall behovsvurderinger",
)
fig.show()
```

## Row
```{python}
#| title: Statusflyt i behovsvurdering

def statusflyt_behovsvurdering(df_bv: pd.DataFrame) -> go.Figure:
    opprettet = df_bv.shape[0]
    opprettet_til_paabegynt = (~df_bv.paabegynt.isna()).sum()
    paabegynt_til_avsluttet = (~df_bv.paabegynt.isna() & ~df_bv.avsluttet.isna()).sum()
    avsluttet_til_slettet = (~df_bv.avsluttet.isna() & ~df_bv.slettet.isna()).sum()
    opprettet_til_slettet = (df_bv.paabegynt.isna() & df_bv.avsluttet.isna() & ~df_bv.slettet.isna()).sum()
    paabegynt_til_slettet = (~df_bv.paabegynt.isna() & df_bv.avsluttet.isna() & ~df_bv.slettet.isna()).sum()

    # det er ikke mulig å fullføre en behovsvurdering uten å ha påbegynt den
    # men vi har ikke hele historikken i databasen, så det finnes fullførte
    # behovsvurderinger uten påbegynt tidspunkt
    opprettet_til_avsluttet = (df_bv.paabegynt.isna() & ~df_bv.avsluttet.isna()).sum()
    til_avsluttet = paabegynt_til_avsluttet + opprettet_til_avsluttet
    til_paabegynt = opprettet_til_paabegynt + opprettet_til_avsluttet

    fig = go.Figure()
    fig.add_trace(
        go.Sankey(
            node=dict(
                pad=200,
                label=["Alle", "Opprettet", "Påbegynt", "Fullført", "Slettet"],
                # node position in the open interval (0, 1)
                x=[0.05, 0.25, 0.55, 0.8, 0.95],
                y=[0.5, 0.5, 0.7, 0.85, 0.2],
            ),
            link=dict(
                source=[0, 1, 2, 3, 1, 2],
                target=[1, 2, 3, 4, 4, 4],
                value=[
                    opprettet,
                    til_paabegynt,
                    til_avsluttet,
                    avsluttet_til_slettet,
                    opprettet_til_slettet,
                    paabegynt_til_slettet,
                    ],
            ),
        )
    )
    return fig

statusflyt_behovsvurdering(df_bv)
```

## Row
```{python}
df_bv["gjennomforingstid"] = df_bv.avsluttet - df_bv.paabegynt
```

```{python}
#| component: valuebox
#| title: Antall fullførte behovsvurderinger med starttidspunkt
dict(
    color = "light",
    value = int((~df_bv.paabegynt.isna() & ~df_bv.avsluttet.isna()).sum())
)
```

```{python}
#| component: valuebox
#| title: Median av gjennomføringstid for behovsvurderinger
dict(
    color = "light",
    value = str(
        round(
            (
                df_bv[~df_bv.paabegynt.isna() & ~df_bv.avsluttet.isna()]
                .gjennomforingstid.astype('timedelta64[s]')
                .astype('int')
                .median()/60/60
            ),
            1,
        )
    ) + " timer"
)
```

```{python}
#| component: valuebox
#| title: Gjennomsnitt av gjennomføringstid for behovsvurderinger
dict(
    color = "light",
    value = str(
        round(
            (
                df_bv[~df_bv.paabegynt.isna() & ~df_bv.avsluttet.isna()]
                .gjennomforingstid.astype('timedelta64[s]')
                .astype('int')
                .mean()/60/60
            ),
            1,
        )
    ) + " timer"
)
```

## Row
```{python}
#| title: Gjennomføringstid for behovsvurderinger (histogram)
fig = go.Figure()
fig = fig.add_trace(
    go.Histogram(
        x=(
            df_bv[~df_bv.paabegynt.isna() & ~df_bv.avsluttet.isna()]
            .gjennomforingstid
            .astype('timedelta64[s]')
            .astype('int')/60/60
        ),
        nbinsx=100,
    )
)
fig = fig.update_layout(
    xaxis_title="Antall timer",
    yaxis_title="Antall bevohsvurderinger",
)
fig.show()
```

```{python}
def box_plot_tid(series: pd.Series, title) -> go.Figure:
    fig = go.Figure()
    fig.add_trace(
        go.Box(
            y=(
                series
                .astype('timedelta64[s]')
                .astype('int')/60/60
            ),
            boxpoints='all',
            boxmean=True,
            name=title
        )
    )
    fig.update_layout(
        yaxis_title="Antall timer",
    )
    return fig
```

```{python}
#| title: Gjennomføringstid for behovsvurderinger (boksplott)
box_plot_tid(
    df_bv[~df_bv.paabegynt.isna() & ~df_bv.avsluttet.isna()].gjennomforingstid,
    "Gjennomføringstid",
)
```
