
# Behovsvurdering

```{python}
query = """
    select distinct bv.id, opprettet, paabegynt, avsluttet, slettet
    from (select distinct id, opprettet
            from `pia_bigquery_sink_v1_dataset_prod.behovsvurdering-bigquery-v1`) as bv
        left join
            (select id, endret as paabegynt
                from `pia_bigquery_sink_v1_dataset_prod.behovsvurdering-bigquery-v1`
                where status="PÅBEGYNT") as bv_paabegynt
        on bv_paabegynt.id = bv.id
        left join
            (select id, endret as avsluttet
                from `pia_bigquery_sink_v1_dataset_prod.behovsvurdering-bigquery-v1`
                where status="AVSLUTTET") as bv_avsluttet
            on bv_avsluttet.id = bv.id
        left join
            (select id, min(endret) as slettet
                from `pia_bigquery_sink_v1_dataset_prod.behovsvurdering-bigquery-v1`
                where status="SLETTET"
                group by id) as bv_slettet
            on bv_slettet.id = bv.id
"""
df_bv = bq_client.query(query=query).to_dataframe()
```

## Row
```{python}
#| component: valuebox
#| title: Antall opprettet behovsvurderinger
dict(
    color = "light",
    value = df_bv.shape[0]
)
```

```{python}
#| component: valuebox
#| title: Antall fullførte behovsvurderinger
dict(
    color = "light",
    value = int((~df_bv.avsluttet.isna()).sum())
)
```

## Row
```{python}
#| title: Antall opprettet behovsvurderinger per måned

query = """
    select format_datetime('%Y-%m', opprettet) as maaned, count(distinct id)
    from `pia_bigquery_sink_v1_dataset_prod.behovsvurdering-bigquery-v1`
    group by maaned
    order by maaned
"""
opprettet_behovsv_permaaned = bq_client.query(query=query).to_dataframe()

fig = go.Figure()
fig = fig.add_trace(
    go.Bar(
        x=opprettet_behovsv_permaaned.maaned,
        y=opprettet_behovsv_permaaned.f0_,
    )
)
fig = fig.update_layout(
    xaxis_title="Opprettet måned",
    yaxis_title="Antall behovsvurderinger",
)
fig.show()
```

```{python}
#| title: Antall fullførte behovsvurderinger per måned
query = """
    select format_datetime('%Y-%m', endret) as maaned, count(distinct id)
    from `pia_bigquery_sink_v1_dataset_prod.behovsvurdering-bigquery-v1`
    where status="AVSLUTTET"
    group by maaned
    order by maaned
"""
opprettet_behovsv_permaaned = bq_client.query(query=query).to_dataframe()

fig = go.Figure()
fig = fig.add_trace(
    go.Bar(
        x=opprettet_behovsv_permaaned.maaned,
        y=opprettet_behovsv_permaaned.f0_,
    )
)
fig = fig.update_layout(
    xaxis_title="Fullført måned",
    yaxis_title="Antall behovsvurderinger",
)
fig.show()
```

## Row
```{python}
#| title: Statusflyt i behovsvurdering
import pandas as pd

def statusflyt_behovsvurdering(df_bv: pd.DataFrame) -> go.Figure:
    opprettet = df_bv.shape[0]
    opprettet_til_paabegynt = (~df_bv.paabegynt.isna()).sum()
    paabegynt_til_avsluttet = (~df_bv.paabegynt.isna() & ~df_bv.avsluttet.isna()).sum()
    avsluttet_til_slettet = (~df_bv.avsluttet.isna() & ~df_bv.slettet.isna()).sum()
    opprettet_til_slettet = (df_bv.paabegynt.isna() & df_bv.avsluttet.isna() & ~df_bv.slettet.isna()).sum()
    paabegynt_til_slettet = (~df_bv.paabegynt.isna() & df_bv.avsluttet.isna() & ~df_bv.slettet.isna()).sum()

    # det er ikke mulig å fullføre en behovsvurdering uten å ha påbegynt den
    # men vi har ikke hele historikken i databasen, så det finnes fullførte
    # behovsvurderinger uten påbegynt tidspunkt
    opprettet_til_avsluttet = (df_bv.paabegynt.isna() & ~df_bv.avsluttet.isna()).sum()
    til_avsluttet = paabegynt_til_avsluttet + opprettet_til_avsluttet
    til_paabegynt = opprettet_til_paabegynt + opprettet_til_avsluttet

    fig = go.Figure()
    fig.add_trace(
        go.Sankey(
            node=dict(
                pad=200,
                label=["Alle", "Opprettet", "Påbegynt", "Fullført", "Slettet"],
                # node position in the open interval (0, 1)
                x=[0.05, 0.25, 0.55, 0.8, 0.95],
                y=[0.5, 0.5, 0.7, 0.85, 0.2],
            ),
            link=dict(
                source=[0, 1, 2, 3, 1, 2],
                target=[1, 2, 3, 4, 4, 4],
                value=[
                    opprettet,
                    til_paabegynt,
                    til_avsluttet,
                    avsluttet_til_slettet,
                    opprettet_til_slettet,
                    paabegynt_til_slettet,
                    ],
            ),
        )
    )
    return fig

statusflyt_behovsvurdering(df_bv)
```

## Row
```{python}
# gjennomføringstid (fra påbegynt til avsluttet/fullført) i antall timer
df_bv["gjennomforingstid"] = (df_bv.avsluttet - df_bv.paabegynt).dt.total_seconds()/60/60
```

```{python}
#| component: valuebox
#| title: Antall fullførte behovsvurderinger med starttidspunkt
dict(
    color = "light",
    value = int((~df_bv.paabegynt.isna() & ~df_bv.avsluttet.isna()).sum())
)
```

```{python}
#| component: valuebox
#| title: Median av gjennomføringstid for behovsvurderinger
dict(
    color = "light",
    value = str(
        round(
            (
                df_bv[~df_bv.paabegynt.isna() & ~df_bv.avsluttet.isna()]
                .gjennomforingstid
                .median()
            ),
            1,
        )
    ) + " timer"
)
```

```{python}
#| component: valuebox
#| title: Gjennomsnitt av gjennomføringstid for behovsvurderinger
dict(
    color = "light",
    value = str(
        round(
            (
                df_bv[~df_bv.paabegynt.isna() & ~df_bv.avsluttet.isna()]
                .gjennomforingstid
                .mean()
            ),
            1,
        )
    ) + " timer"
)
```

## Row
```{python}
#| title: Gjennomføringstid for behovsvurderinger (histogram)
fig = go.Figure()
fig = fig.add_trace(
    go.Histogram(
        x=(
            df_bv[
                ~df_bv.paabegynt.isna()
                & ~df_bv.avsluttet.isna()
                & (df_bv.gjennomforingstid < 24)
            ].gjennomforingstid
        ),
        nbinsx=23,
    )
)
fig = fig.update_layout(
    title="Vises kun under 24h",
    xaxis_title="Antall timer",
    yaxis_title="Antall bevohsvurderinger",
)
fig.show()
```

```{python}
def box_plot_tid(series: pd.Series, title) -> go.Figure:
    fig = go.Figure()
    fig.add_trace(
        go.Box(
            y=series,
            boxpoints='all',
            boxmean=True,
            name=title
        )
    )
    fig.update_layout(
        title=("Vises kun under 24h"),
        yaxis_title="Antall timer",
        yaxis_range=[0,24],
    )
    return fig
```

```{python}
#| title: Gjennomføringstid for behovsvurderinger (boksplott)
box_plot_tid(
    df_bv[~df_bv.paabegynt.isna() & ~df_bv.avsluttet.isna()].gjennomforingstid,
    "Gjennomføringstid",
)
```

## Row
```{python}
#| title: Gjennomføringstid for behovsvurderinger (gruppert)
col = "gjennomforingstid_intervall"
df_bv.loc[df_bv.gjennomforingstid < 0.25, col] = "<15min"
df_bv.loc[df_bv.gjennomforingstid.between(0.25, 5), col] = "15min-30min"
df_bv.loc[df_bv.gjennomforingstid.between(0.5, 1), col] = "30min-1t"
df_bv.loc[df_bv.gjennomforingstid.between(1, 1.5), col] = "1-1.5t"
df_bv.loc[df_bv.gjennomforingstid.between(1.5, 2), col] = "1.5-2t"
df_bv.loc[df_bv.gjennomforingstid.between(2, 3), col] = "2-3t"
df_bv.loc[df_bv.gjennomforingstid.between(3, 6), col] = "3-6t"
df_bv.loc[df_bv.gjennomforingstid.between(6, 12), col] = "6-12t"
df_bv.loc[df_bv.gjennomforingstid.between(12, 24), col] = "12-24t"
df_bv.loc[df_bv.gjennomforingstid.between(24, 48), col] = "24-48t"
df_bv.loc[df_bv.gjennomforingstid.between(48, 7*24), col] = "24t-1uke"
df_bv.loc[df_bv.gjennomforingstid.between(7*24, 2*7*24), col] = "1uke-2uker"
df_bv.loc[df_bv.gjennomforingstid>=2*7*24, col] = ">=2uker"

intervaller = (
    df_bv.sort_values("gjennomforingstid", ascending=True)
    .gjennomforingstid_intervall
    .unique()
)
bv_per_intervall = (
    df_bv[~df_bv.gjennomforingstid.isna()]
    .groupby("gjennomforingstid_intervall")
    .id.nunique()
    .reset_index()
)
fig = go.Figure()
fig = fig.add_trace(
    go.Bar(
        x=bv_per_intervall[col],
        y=bv_per_intervall.id,
        text=bv_per_intervall.id,
    )
)
fig = fig.update_layout(
    height=500,
    width=800,
    xaxis_title="Gjennomføringstid intervall (fra og med, til)",
    yaxis_title="Antall saker",
)
fig = fig.update_xaxes(categoryorder="array", categoryarray=intervaller)
fig.show()
```
