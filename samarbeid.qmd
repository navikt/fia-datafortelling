# Samarbeid

```{python}
df_smb_sistoppdatering = load_data_deduplicate(project, dataset, table_samarbeid, distinct_colunms="id")
df_bv_sistoppdatering = load_data_deduplicate(project, dataset, table_behovsvurdering, distinct_colunms="id")
```

## Row

```{python}
#| component: valuebox
#| title: Antall opprettet samarbeider
dict(
    color = "light",
    value = df_smb_sistoppdatering.id.nunique()
)
```

```{python}
#| component: valuebox
#| title: Antall aktive samarbeider
dict(
    color = "light",
    value = df_smb_sistoppdatering[df_smb_sistoppdatering.status == "AKTIV"].id.nunique()
)
```

```{python}
#| component: valuebox
#| title: Antall aktive samarbeider uten navn
dict(
    color = "light",
    value = df_smb_sistoppdatering[
        (df_smb_sistoppdatering.status == "AKTIV")
        & ~(
            (df_smb_sistoppdatering.navn.notnull())
            & (df_smb_sistoppdatering.navn != "")
            & (df_smb_sistoppdatering.navn != "Samarbeid uten navn")
        )
    ].id.nunique()
)
```

```{python}
#| component: valuebox
#| title: Antall saker med aktive samarbeider
dict(
    color = "light",
    value = df_smb_sistoppdatering[df_smb_sistoppdatering.status == "AKTIV"].saksnummer.nunique()
)
```

```{python}
#| component: valuebox
#| title: Antall samarbeider som har fullført behovsvurdering
dict(
    color = "light",
    value = df_bv_sistoppdatering[df_bv_sistoppdatering.status=="AVSLUTTET"].samarbeidId.nunique()
)
```

## Row
```{python}
#| title: Antall saker per antall aktive samarbeider
query = f"""
    select antall_samarbeid, count(distinct saksnummer) as antall_saker
    from (select saksnummer, count(distinct id) as antall_samarbeid
        from `{dataset}.{table_samarbeid}`
        where status = "AKTIV"
        group by saksnummer
        order by antall_samarbeid desc)
    group by antall_samarbeid
    order by antall_saker desc
"""
antall_saker_per_antall_samarbeider = bq_client.query(query=query).to_dataframe()

fig = go.Figure()
fig = fig.add_trace(
    go.Bar(
        x=antall_saker_per_antall_samarbeider.antall_samarbeid,
        y=antall_saker_per_antall_samarbeider.antall_saker,
    )
)
fig = fig.update_layout(
    xaxis_title="Antall aktive samarbeider",
    yaxis_title="Antall saker",
)
fig = fig.update_xaxes(type='category')
fig.show()
```

```{python}
#| title: Antall samarbeider per antall fullførte behovsvurderinger
antall_smb_per_antall_bv = (
    df_bv_sistoppdatering[df_bv_sistoppdatering.status=="AVSLUTTET"]
    .groupby("samarbeidId")
    .id
    .count()
    .value_counts()
    .sort_index()
)

fig = go.Figure()
fig = fig.add_trace(
    go.Bar(
        x=antall_smb_per_antall_bv.index,
        y=antall_smb_per_antall_bv.values,
    )
)
fig = fig.update_layout(
    xaxis_title="Antall fullførte behovsvurderinger",
    yaxis_title="Antall samarbeider",
)
fig = fig.update_xaxes(type='category')
fig.show()
```